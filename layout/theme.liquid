<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>{{ page_title }}</title>
    <meta name="google-site-verification" content="4CyyxbiT2JJKwsI1xsr_c7Qf-ihbvBm4WMiPhI0rOeA">
    <meta name="google-site-verification" content="1L3RQDlBxPuNpF21De0Ah8NwPfQRUDie4JA9sbgKwfo">
    <meta name="theme-color" content="">
    {%- if page_description -%}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    {%- render 'meta-tags' -%}
    {% render 'web-font' %}
    <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    <script>
         const pattern = [
            ['src', 'shopify-perf-kit', 2],
            ['src', 'https://www.google-analytics.com/analytics.js', 3],
            ['className', 'analytics', 2],
            ['id', 'web-pixels-manager-setup', 4]
          ]
          // 存储 head 中的 script 标签信息
          const scriptQueue = [];
          // 监听 DOM 的添加
          window.observer = new MutationObserver((mutations) => {
            mutations.forEach((mutation) => {
              mutation.addedNodes.forEach((node) => {
                if (node.tagName === 'SCRIPT' && node.parentElement.tagName === 'HEAD') {
                for (const [attr, value, level] of pattern) {
                  if (node[attr] && node.type !== "text/lazyload" && node[attr].includes(value)) {
                     const newScript = document.createElement('script');
                     const attrs = Array.from(node.attributes).map(attr => [attr.name, attr.value])
                     
                     for (const [attr, value] of attrs) {
                        newScript.setAttribute(attr, value)
                     }
                     // lazy
                     newScript.type = "text/lazyload";
                     newScript.setAttribute('data-level', level);

                     if (node.src) {
                        newScript.src = node.src
                     } else {
                        const blob = new Blob([node.textContent], { type: 'application/javascript' })
                        const reader = new FileReader(); 
                        reader.onload = function (event) {
                          newScript.src = event.target.result
                        }

                        reader.readAsDataURL(blob);
                     }

                     document.head.replaceChild(newScript, node); // 执行脚本 
                     break;
                  }
                }
                }
              });
            });
          });

          // 开始观察 head 的变动
          window.observer.observe(document.head, { childList: true });
    </script>
    <script src="{{ 'libs.min.js' | asset_url }}" defer></script>
    {% comment %} {{ content_for_header }} {% endcomment %}
    {{
      content_for_header
      | replace: 'preloads.js?locale=en-US"', 'preloads.js?locale=en-US" type="text/lazyload" data-level="5"'
      | replace: "s.src = urls[i];", 's.type ="text/lazyload";s.async = false;s.setAttribute("data-level", "3");s.src = urls[i];'
      | replace: 'data-source-attribution="shopify.loadfeatures" defer="defer"', 'data-source-attribution="shopify.loadfeatures" data-level="1" type="text/lazyload"'
    }}
    {% render 'global-config' %}
    {% render 'pagefly-app-header' %}
  </head>
  <body class="gradient">
    {{ 'base.min.css' | asset_url | stylesheet_tag: preload: true }}
    {{ 'tailwind.min.css' | asset_url | stylesheet_tag: preload: true }}
    {% section 'announcement-bar' %}
    {% section 'header' %}
    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>
    {% section 'care' %}
    {% section 'footer' %}
    {%- render 'cart-drawer' -%}
    <script
      type="module"
    >
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}',
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`,
      };

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
      };

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
      };
    </script>
  </body>
  {% render 'dataLayer-allPages' %}
  {% render 'dialog' %}
  {% if product or request.path == '/pages/test-ride' or request.path == '/pages/urtopia-e-bike-review' %}
    {% render 'judgeme_core' %}
  {% endif %}
  <script src="{{ 'global.js' | asset_url }}" fetchpriority="low" defer></script>
</html>
